resource "aws_vpc" "vpc" {
  cidr_block = "10.0.0.0/16"

  tags = {
    Name = "baeta-vpc"
    Iac  = "terraform"
  }
}


resource "aws_subnet" "public_subnets" {
  count             = length(var.public_subnet_cidrs)
  vpc_id            = aws_vpc.vpc.id
  cidr_block        = element(var.public_subnet_cidrs, count.index)
  availability_zone = element(var.azs, count.index)

  tags = {
    Name = "Public Subnet ${count.index + 1}"
    Iac  = "terraform"
  }
}

resource "aws_subnet" "private_subnets" {
  count             = length(var.private_subnet_cidrs)
  vpc_id            = aws_vpc.vpc.id
  cidr_block        = element(var.private_subnet_cidrs, count.index)
  availability_zone = element(var.azs, count.index)

  tags = {
    Name = "Private Subnet ${count.index + 1}"
    Iac  = "terraform"
  }
}

resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.vpc.id

  tags = {
    Name = "Baeta VPC IG"
    Iac  = "terraform"
  }
}

resource "aws_route_table" "third_rt" {
  vpc_id = aws_vpc.vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }

  tags = {
    Name = "3nd Route Table"
    Iac  = "terraform"
  }
}

resource "aws_route_table_association" "public_subnet_asso" {
  count          = length(var.public_subnet_cidrs)
  subnet_id      = element(aws_subnet.public_subnets[*].id, count.index)
  route_table_id = aws_route_table.third_rt.id
}


resource "aws_eip" "nat-eip" {
  count  = length(var.public_subnet_cidrs) # Create one EIP per public subnet
  domain = "vpc"

  tags = {
    Name = "nat-eip-${count.index + 1}"
    Iac  = "terraform"
  }
}

resource "aws_nat_gateway" "nat-gateway" {
  count         = length(var.public_subnet_cidrs) # Create one NAT gateway per public subnet
  allocation_id = aws_eip.nat-eip[count.index].id
  subnet_id     = aws_subnet.public_subnets[count.index].id

  tags = {
    Name = "nat-gateway-${count.index + 1}"
    Iac  = "terraform"
  }
}
